import groovy.xml.XmlUtil

apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    signingConfigs {
        debug {
            keyAlias 'betetech'
            keyPassword 'betetech'
            storeFile file('D:/work/key/android_bete7.jks')
            storePassword 'betetech'
        }

        release {
            keyAlias 'betetech'
            keyPassword 'betetech'
            storeFile file('D:/work/key/android_bete7.jks')
            storePassword 'betetech'
        }
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        applicationId "com.bete.lamp"
        multiDexEnabled = true
        versionCode 7
        versionName "1.2.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            //moduleName "serial_port"
//            abiFilters "armeabi"//, "x86", "x86_64", "arm64-v8a", "armeabi-v7a"
//            ldLibs "log", "z", "m"  //添加依赖库文件，因为有log打印等
//        }
        ndk {
            moduleName "anaalgorithm"
            ldLibs "log"  //实现 log
            abiFilters "armeabi", "x86"//, "armeabi-v7a", "mips"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                //这里修改apk文件名
                outputFileName = "LampPcr_v${defaultConfig.versionName}_${buildType.name}_${releaseTime()}.apk"
            }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layout/fsetting',
                            'src/main/res'
                    ]
        }
    }

    sourceSets {
        main {
            jni.srcDirs = ['src/jniLibs']//
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.github.whieenz:LogCook:v1.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:26.0.0-alpha1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //implementation 'com.blankj:utilcode:1.23.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'org.jetbrains:annotations-java5:15.0'
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.1'
    implementation 'me.jessyan:autosize:1.1.0'
    implementation 'com.android.support:recyclerview-v7:26.0.0-alpha1'
    implementation 'com.android.support:support-core-ui:26.0.0-alpha1'
    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'
    implementation 'org.litepal.android:java:3.0.0'
    implementation 'com.github.mjdev:libaums:0.6.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.contrarywind:Android-PickerView:4.1.8'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.android.support:multidex:1.0.0'
    implementation 'org.xutils:xutils:3.5.1'
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    //优化，检测内存泄漏
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'

//    implementation project(path: ':lfilepickerlibrary')
    implementation(name: 'lfilepickerlibrary', ext: 'aar')
    implementation project(path: ':mywificonnect')
    //Zxing核心包
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'
    compileOnly files('libs/classes.jar')
}

//preBuild {
//    doLast {
//        def imlFile = file(project.name + ".iml")
//        println('Change ' + project.name + '.iml order')
//        try {
//            def parsedXml = (new XmlParser()).parse(imlFile)
//            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
//            parsedXml.component[1].remove(jdkNode)
//            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
//            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
//            XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
//        } catch (FileNotFoundException e) {
//            // nop, iml not found
//        }
//    }
//}

